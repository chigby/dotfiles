#!/usr/bin/env python

import re
import sys
from email import policy
from email.parser import Parser
from email.header import Header

def just_names(email):
    email = re.sub(r'\s+', ' ', email)
    email = re.sub(r'<[^>]+>', '', email)
    email = email.strip()
    return email

def others(number):
    if number < 1:
        return ''
    if number == 1:
        plural = ''
    else:
        plural = 's'
    return ', and {0} other{1}.'.format(number, plural)

def is_too_long(txt):
    wrapped = Header(txt).encode()
    return wrapped.count('\n') > 1

def make_shorter(txt):
    emails = list(map(just_names, txt.replace('\n', '').split(',')))
    excess = []
    s = ', '.join(emails) + others(len(excess))
    while len(s) > 130:
        excess.append(emails.pop())
        s = ', '.join(emails) + others(len(excess))
    return s.replace('\n', ' ')

p = Parser(policy=policy.default)
msg = p.parse(sys.stdin, headersonly=True)
if msg['To'] and is_too_long(msg['To']):
    msg.replace_header('To', make_shorter(msg['To']))
for cc in ('CC', 'Cc', 'cc'):
    if msg[cc] and is_too_long(msg[cc]):
        msg.replace_header(cc, make_shorter(msg[cc]))
        break

print(msg.as_string())
